// Generated by the LibSL translator.  DO NOT EDIT!
// sources:
//  - java/util/ArrayList.lsl:45
//
package stub.java.util;

import java.lang.LinkageError;
import java.lang.SuppressWarnings;
import java.lang.Void;
import java.util.ArrayList;
import java.util.Spliterator;
import java.util.function.Consumer;
import runtime.LibSLRuntime;

@SuppressWarnings({"all", "unchecked"})
public final class ArrayList_Spliterator implements LibSLRuntime.HasAutomaton, Spliterator {
    private ArrayList_Spliterator(Void a, Void b) {
        super();
    }

    private ArrayList_Spliterator(ArrayList _this, int origin, int fence, int expectedModCount) {
        throw new LinkageError();
    }

    public int characteristics() {
        throw new LinkageError();
    }

    public long estimateSize() {
        throw new LinkageError();
    }

    public void forEachRemaining(Consumer _action) {
        throw new LinkageError();
    }

    public long getExactSizeIfKnown() {
        throw new LinkageError();
    }

    public boolean tryAdvance(Consumer _action) {
        throw new LinkageError();
    }

    public Spliterator trySplit() {
        throw new LinkageError();
    }
}
