// Generated by the LibSL translator.  DO NOT EDIT!
// sources:
//  - java/util/stream/IntStream.lsl:35
//
package stub.java.util.stream;

import java.lang.Integer;
import java.lang.LinkageError;
import java.lang.SuppressWarnings;
import java.lang.Void;
import java.util.PrimitiveIterator;
import java.util.function.Consumer;
import java.util.function.IntConsumer;
import runtime.LibSLRuntime;

@SuppressWarnings({"all", "unchecked"})
public class IntStreamLSLIterator implements LibSLRuntime.HasAutomaton, PrimitiveIterator.OfInt {
    private IntStreamLSLIterator(Void a, Void b) {
        super();
    }

    public boolean hasNext() {
        throw new LinkageError();
    }

    public Integer next() {
        throw new LinkageError();
    }

    public int nextInt() {
        throw new LinkageError();
    }

    public void remove() {
        throw new LinkageError();
    }

    public void forEachRemaining(Consumer userAction) {
        throw new LinkageError();
    }

    public void forEachRemaining(IntConsumer userAction) {
        throw new LinkageError();
    }
}
