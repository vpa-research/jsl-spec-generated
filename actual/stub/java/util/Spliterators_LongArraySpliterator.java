// Generated by the LibSL translator.  DO NOT EDIT!
// sources:
//  - java/util/Spliterators.lsl:71
//
package stub.java.util;

import java.lang.LinkageError;
import java.lang.SuppressWarnings;
import java.lang.Void;
import java.util.Comparator;
import java.util.Spliterator;
import java.util.function.Consumer;
import java.util.function.LongConsumer;
import runtime.LibSLRuntime;

@SuppressWarnings({"all", "unchecked"})
public final class Spliterators_LongArraySpliterator implements LibSLRuntime.HasAutomaton, Spliterator.OfLong {
    private Spliterators_LongArraySpliterator(Void a, Void b) {
        super();
    }

    public Spliterators_LongArraySpliterator(long[] arr, int additionalCharacteristics) {
        throw new LinkageError();
    }

    public Spliterators_LongArraySpliterator(long[] arr, int origin, int pFence,
            int additionalCharacteristics) {
        throw new LinkageError();
    }

    public int characteristics() {
        throw new LinkageError();
    }

    public long estimateSize() {
        throw new LinkageError();
    }

    public void forEachRemaining(Consumer _action) {
        throw new LinkageError();
    }

    public void forEachRemaining(LongConsumer _action) {
        throw new LinkageError();
    }

    public Comparator getComparator() {
        throw new LinkageError();
    }

    public long getExactSizeIfKnown() {
        throw new LinkageError();
    }

    public boolean hasCharacteristics(int _characteristics) {
        throw new LinkageError();
    }

    public boolean tryAdvance(LongConsumer _action) {
        throw new LinkageError();
    }

    public boolean tryAdvance(Consumer _action) {
        throw new LinkageError();
    }

    public Spliterator.OfLong trySplit() {
        throw new LinkageError();
    }
}
