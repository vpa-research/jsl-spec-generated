// Generated by the LibSL translator.  DO NOT EDIT!
// source: ?
//
package stub.java.lang;

import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.CharSequence;
import java.lang.InternalError;
import java.lang.Object;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.lang.Void;
import java.util.Locale;
import runtime.LibSLRuntime;

@SuppressWarnings({"all", "unchecked"})
public final class System_PrintStream extends PrintStream implements LibSLRuntime.HasAutomaton {
    private System_PrintStream(Void a, Void b) {
        super((OutputStream) null);
    }

    public PrintStream append(CharSequence csq) {
        throw new InternalError();
    }

    public PrintStream append(CharSequence csq, int start, int end) {
        throw new InternalError();
    }

    public PrintStream append(char c) {
        throw new InternalError();
    }

    public boolean checkError() {
        throw new InternalError();
    }

    public void close() {
        throw new InternalError();
    }

    public void flush() {
        throw new InternalError();
    }

    public PrintStream format(Locale l, String format, Object[] args) {
        throw new InternalError();
    }

    public PrintStream format(String format, Object[] args) {
        throw new InternalError();
    }

    public void print(Object obj) {
        throw new InternalError();
    }

    public void print(String s) {
        throw new InternalError();
    }

    public void print(boolean b) {
        throw new InternalError();
    }

    public void print(char c) {
        throw new InternalError();
    }

    public void print(char[] s) {
        throw new InternalError();
    }

    public void print(double d) {
        throw new InternalError();
    }

    public void print(float f) {
        throw new InternalError();
    }

    public void print(int i) {
        throw new InternalError();
    }

    public void print(long l) {
        throw new InternalError();
    }

    public PrintStream printf(Locale l, String format, Object[] args) {
        throw new InternalError();
    }

    public PrintStream printf(String format, Object[] args) {
        throw new InternalError();
    }

    public void println() {
        throw new InternalError();
    }

    public void println(Object x) {
        throw new InternalError();
    }

    public void println(String x) {
        throw new InternalError();
    }

    public void println(boolean x) {
        throw new InternalError();
    }

    public void println(char x) {
        throw new InternalError();
    }

    public void println(char[] x) {
        throw new InternalError();
    }

    public void println(double x) {
        throw new InternalError();
    }

    public void println(float x) {
        throw new InternalError();
    }

    public void println(int x) {
        throw new InternalError();
    }

    public void println(long x) {
        throw new InternalError();
    }

    public void write(byte[] b) throws java.io.IOException {
        throw new InternalError();
    }

    public void write(byte[] buf, int off, int len) {
        throw new InternalError();
    }

    public void write(int b) {
        throw new InternalError();
    }
}
